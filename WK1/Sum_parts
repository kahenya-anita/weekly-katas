ls = [0, 1, 3, 6, 10]

Its following parts:

ls = [0, 1, 3, 6, 10]
ls = [1, 3, 6, 10]
ls = [3, 6, 10]
ls = [6, 10]
ls = [10]
ls = []
The corresponding sums are (put together in a list): [20, 20, 19, 16, 10, 0]

The function parts_sums (or its variants in other languages) will take as parameter a list ls and return a list of the sums of its parts as defined above.

       OUTPUT
function partsSums(ls) {
  let res = new Array(ls.length + 1);
  res[ls.length] = 0;
  
  for (let i = ls.length - 1; i >= 0; i--) 
    res[i] = res[i + 1] + ls[i];
  
  return res;
  
}
